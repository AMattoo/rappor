<!-- Example XML file that defines candidates -->

<!--
rappor.xml looks like this:

<rappor-configuration>
  <rappor-parameter-types>
    <rappor-parameters name="foo">
      <summary>
        For opt-in users
      </summary>
      <parameters num-cohorts="128" ... />
    </rappor-parameters>
  </rappor-parameter-types>

  <rappor-metrics>

    <rappor-metric name="foo" type="ETLD_PLUS_ONE">
      <owner>
        email@google.com
      </owner>
      <summary>
        Collecting foo from users.
      </summary>
    </rappor-metric>

    <rappor-metric name="Multi-D" type="ETLD_PLUS_ONE">
      <owner>
        email@google.com
      </owner>
      <string-field name="Domain">
        <summary>
          Domain name.
        </summary>
      </string-field>

      // NOTE: irrelevant since only strings need map files
      <flags-field>
      </flags-field>

    </rappor-metric>

  </rappor-metrics>

-->

<!--
How to use this file:

There are two levels: metrics and fields.

The names of metrics and fields must match those in rappor.xml.

List all the candidate filenames in a single element.

When

-->
<metrics>

  <rappor-metric name="Foo">
    <comment>
      Comment that can be parsed
    </comment>
    <candidates>
      urls1.txt
      urls2.txt
    </candidates>
  </rappor-metric>

  <rappor-metric name="Bar">
    <candidates>
      urls1.txt
      urls3.txt
    </candidates>
  </rappor-metric>

</metrics>
